{"version":3,"sources":["components/Header/index.js","components/WinnerBoard/component.js","components/WinnerBoard/index.js","components/Button/component.js","components/Button/index.js","data/actions.js","components/ScoreHistory/ScoreHistory.js","components/ScoreHistory/index.js","components/Player/Player.js","components/Player/Player1.js","components/Player/Player2.js","history.js","components/StartGame/StartGame.js","components/StartGame/index.js","components/App.js","components/Loading/component.js","data/initial.js","data/reducer.js","data/store.js","index.js"],"names":["Header","className","class","WinnerBoard","winner1","winner2","connect","state","player1Score","player1","player2Score","player2","Button","handleIncrementR0","to","onClick","dispatch","type","ScoreHistory","score","scope","map","item","index","key","player_1","won","player_2","Player","winner","handleIncrement","style","title","serving","player1Name","player2Name","createBrowserHistory","StartGame","winningScore","alternateServer","handleFormSubmit","useState","inputValueP1","setInputValueP1","inputValueP2","setInputValueP2","inputWinScore","setWinScore","inputAlternateServe","setAlternateServe","onSubmit","e","preventDefault","for","onChange","currentTarget","value","id","placeholder","name","selected","valueP1","valueP2","valueWinScore","altServe","startGame","history","push","App","Component","Fragment","exact","path","Player1","Player2","loaded","switchServer","server","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","action","initial","newScore","scoring","altServer","winScore","p2Name","p1Name","applyMiddleware","thunk","store","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0005316d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\n\n const Header = () => {\n\n  return (\n    <header className=\"header-cont\">\n        <h1 class=\"header-title\">Ross's Ping Pong Scorer</h1>\n    </header>\n  )\n}\nexport default Header;","import React, { useState } from \"react\";\n\n\n const WinnerBoard = ({winner1,winner2}) => {\n\n  return (\n    <>\n        <h2 className=\"alert alert-success\"> {winner1 }{winner2}\n        </h2>\n        <hr/>\n    </>\n  )\n}\nexport default WinnerBoard;","import {connect} from \"react-redux\";\n\nimport WinnerBoard from './component';\n\nconst mapStateToProps= (state) => {\n  let player1Score = state.player1;\n  let player2Score = state.player2;\n\n  return { \n    winner1: (player1Score + player2Score)===21 \n      && (player1Score > player2Score) \n      && (player1Score > (player2Score +2)) ? \"Player 1 wins!\" :null,\n    winner2: (player1Score + player2Score)===21 \n      && (player2Score > player1Score) \n      && (player2Score > (player1Score +2)) ? \"Player 2 wins!\" :null, \n  };\n}\n\nexport default  connect(mapStateToProps)(WinnerBoard);\n\n// state here is a global state with all properties\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\n const Button = ({handleIncrementR0}) => {\n\n  return (\n    <Link to=\"/startgame\">\n    <button onClick={ handleIncrementR0 } className=\"btn btn-danger\">Reset</button>\n    </Link>\n  )\n}\nexport default Button;","import {connect} from \"react-redux\";\n\nimport Button from './component';\nimport {resetButton} from '../../data/actions';\n\n\nconst mapDispatchToProps= (dispatch) => {\n  return { \n      \n      handleIncrementR0:() => {\n          dispatch(resetButton())\n      }\n\n  };\n}\n\nexport default  connect(null,mapDispatchToProps)(Button);\n\n\n","export const increment_p1 = () => {\n    return {\n        type: \"INCREMENT_P1\",\n    }\n}\n\nexport const increment_p2 = () => {\n    return {\n        type: \"INCREMENT_P2\",\n    }\n}\n\nexport const resetButton = () => {\n    return {\n        type: \"RESET\",\n    }\n}\n\nexport const startGame = (valueP1,valueP2,valueWinScore,altServe) => {\n    return {\n        type: \"START_GAME\",\n            player1Name: valueP1,\n            player2Name: valueP2,\n            winningScore: +valueWinScore,\n            alternateServer: +altServe,\n\n    }\n}\n//value is just the passed value from the form being submitted\n\n","import React, { useState } from \"react\";\n\n\n const ScoreHistory = ({score}) => {\n\n  return (\n    <>\n\n        <table class=\"table\">\n        <thead>\n        <tr>\n            <th scope=\"col\">Game</th>\n            <th scope=\"col\">Player 1 Score</th>\n            <th scope=\"col\">Result</th>\n            <th scope=\"col\">Player 2 Score</th>\n            <th scope=\"col\">Result</th>\n        </tr>\n        </thead>\n        <tbody>\n            {score.map((item, index) => (\n                <tr>\n                    <th scope=\"row\">{index +1}</th>\n                        <td key={ index }>\n                        {item.player_1.score} \n                        </td>\n                        <td key={ index }>\n                        {item.player_1.won === true ? \"Won\":\"Lost\" } \n                        </td>\n                        <td key={ index }>\n                        {item.player_2.score} \n                        </td>\n                        <td key={ index }>\n                        {item.player_2.won === true ? \"Won\":\"Lost\" } \n                        </td>\n                </tr>\n            ))}\n\n        </tbody>\n        </table>\n\n</>\n  );\n}\nexport default ScoreHistory;","import {connect} from \"react-redux\";\n\nimport ScoreHistory from './ScoreHistory';\n\nconst mapStateToProps= (state) => {\n  return { \n    score: state.score\n \n  };\n}\n\nexport default  connect(mapStateToProps)(ScoreHistory);\n\n// state here is a global state with all properties\n","import React, { useState } from \"react\";\n\n\n const Player = ({winner, handleIncrement,style,title,score}) => {\n\n  return (\n    <>\n    <div class=\"score-display\">\n        <div className=\"\">\n            <div className={\"card text-center \" + (style ? \"bg-dark text-white\": \"\")}>\n                <h5 className=\"card-header\">{title}</h5>\n                <div className=\"card-body\">\n                    <p className=\"card-text display-1\">{score}</p>\n                </div>\n                <div className=\"card-footer\">\n                    <button onClick={ (winner) ? null : handleIncrement } className=\"form-control btn btn-success\">+</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    </>\n  );\n}\nexport default Player;","import {connect} from \"react-redux\";\n\nimport Player from './Player';\nimport {increment_p1} from \"../../data/actions\";\n\n\nconst mapStateToProps= (state) => {\n  return { \n      \n    winner:(state.player1 + state.player2)>20,\n    style: state.serving === \"player1\",\n    title: state.player1Name,\n    score: state.player1,\n\n  };\n}\n\n\n\nconst mapDispatchToProps= (dispatch) => {\n    return { \n        \n        handleIncrement:() => {\n            dispatch(increment_p1())\n        }\n  \n    };\n  }\n\nexport default  connect(mapStateToProps,mapDispatchToProps)(Player);\n\n\n// winner, handleIncrement,style,title,score","import {connect} from \"react-redux\";\n\nimport Player from './Player';\nimport {increment_p2} from '../../data/actions'\n\n\nconst mapStateToProps= (state) => {\n  return { \n      \n    winner:(state.player1 + state.player2)>20,\n    style: state.serving === \"player2\",\n    title:state.player2Name,\n    score: state.player2,\n\n  };\n}\n\nconst mapDispatchToProps= (dispatch) => {\n    return { \n        \n        handleIncrement:() => {\n            dispatch(increment_p2())\n        }\n  \n    };\n  }\n\nexport default  connect(mapStateToProps,mapDispatchToProps)(Player);\n\n\n// winner, handleIncrement,style,title,score","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import React, { useState } from \"react\";\n\n\n const StartGame = ({winningScore,alternateServer,player1Name,handleFormSubmit,player2Name}) => {\n\n    const [inputValueP1, setInputValueP1] = useState(player1Name);\n    const [inputValueP2, setInputValueP2] = useState(player2Name);\n    const [inputWinScore, setWinScore] = useState(winningScore);\n    const [inputAlternateServe, setAlternateServe] = useState(alternateServer);\n    \n    const handleInputP1 = (e) => {\n        setInputValueP1(e.currentTarget.value); \n    }\n    const handleInputP2 = (e) => {\n        setInputValueP2(e.currentTarget.value); \n    }\n\n    const handleInputScore = (e) => {\n        setWinScore(e.currentTarget.value); \n    }\n\n    const handleAlternateServe = (e) => {\n        setAlternateServe(e.currentTarget.value); \n    }\n\n    const handleSubmit= (e) => {\n        e.preventDefault();\n        handleFormSubmit(inputValueP1,inputValueP2,inputWinScore,inputAlternateServe);\n    }\n\n  return (\n    <>\n        <form onSubmit={handleSubmit} >\n            <div class=\"form-group\">\n                <label for=\"player1name\">Player 1 Name</label>\n                <input onChange={handleInputP1} value={inputValueP1} class=\"form-control\" id=\"player1name\" placeholder=\"Enter Name\"></input>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"player2name\">Player 2 Name</label>\n                <input onChange={handleInputP2} value={inputValueP2} class=\"form-control\" id=\"player2name\" placeholder=\"Enter Name\"></input>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"points\">Winning Score</label>\n                <input onChange={handleInputScore} type=\"number\" id=\"points\" name=\"points\" value={inputWinScore}/>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"mr-sm-2\" for=\"inlineFormCustomSelect\">Alternate Every</label>\n                <select class=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\n                    <option value={inputAlternateServe} onChange={handleAlternateServe} selected>{inputAlternateServe}</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"7\">7</option>\n                </select>\n            </div>\n            <button type=\"submit\" class=\"btn btn-success\">StartGame</button>\n        </form>\n    </>\n  );\n}\nexport default StartGame;","import {connect} from \"react-redux\";\nimport history from \"../../history\";\n\nimport StartGame from './StartGame';\nimport {startGame} from '../../data/actions'\n\n\nconst mapStateToProps= (state) => {\n  return { \n    winningScore: state.winningScore,\n    alternateServer: state.alternateServer,\n    player1Name: state.player1Name,\n  };\n}\n\nconst mapDispatchToProps= (dispatch) => {\n    return { \n        \n        handleFormSubmit:(valueP1,valueP2,valueWinScore,altServe) => {\n            dispatch( startGame(valueP1,valueP2,valueWinScore,altServe) );\n            // go to the homepage\n            history.push(\"/game\");\n        },\n\n  \n    };\n  }\n\nexport default  connect(mapStateToProps,mapDispatchToProps)(StartGame);","import React from \"react\";\n// import {\n//   BrowserRouter as Router, Route, Switch,} from \"react-router-dom\"; \nimport { HashRouter as Router, Route,Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport WinnerBoard from './WinnerBoard'\nimport Button from './Button'\nimport ScoreHistory from \"./ScoreHistory\";\nimport Player1 from \"./Player/Player1\";\nimport Player2 from \"./Player/Player2\";\nimport StartGame from \"./StartGame\";\nimport history from \"../history\";\nimport Loading from './Loading/component';\n\n\nconst App = () => (\n    <React.Fragment>\n      <Router history={ history }>\n        <Header/>\n        <Route exact path=\"/game\">\n            <div class=\"players-cont\">\n              <Player1 class=\"score-display\"/>\n              <Player2 class=\"score-display\"/>\n            </div>\n            <br/>\n            <WinnerBoard />\n            <br/>\n            <Button />\n            <br/>\n            <ScoreHistory />\n        </Route>\n        <Route exact path= \"/startgame\">\n              <StartGame/>\n        </Route>\n      </Router>\n    </React.Fragment>\n);\n\nexport default App;\n","import React, { Component } from \"react\";\n\nclass Loading extends Component {\n    render() {\n        const { children, load } = this.props;\n        return load ? children : (\n            <div className=\"progress\">\n            <div className=\"progress-bar progress-bar-striped active\" \n                style={{ width: \"100%\" }}\n                />\n            </div>\n            );\n        }\n}\n\n\nexport default Loading;\n","export default {\n    loaded: true,\n    player1: 0,\n    player2: 0,\n    serving: \"player1\",\n    switchServer:0,\n    score:[{\n            player_1: {\n                score: 21,\n                won: true\n            },\n        \n            player_2: {\n                score: 17,\n                won: false\n            }\n        }\n    ],\n    winningScore: 21,\n    alternateServer: 5,\n    player1Name: \"\",\n    player2Name: \"\",\n\n};","import initial from './initial';\n\nconst player1 = state => ({ ...state, player1: state.player1 + 1 });\nconst player2 = state => ({ ...state, player2: state.player2 + 1 });\nconst server = state => ({ ...state, switchServer: (state.player1+state.player2) % 5 === 0 ? state.switchServer + 1 : state.switchServer});\nconst serving = state => ({ ...state, serving: state.switchServer % 2 !== 0 ? \"player2\": \"player1\"});\nconst scoring = (state,initial) => {\n    const newScore = [\n        ...state.score,\n        {\n            player_1:{\n                score:state.player1,\n                won: (state.player1 > state.player2 ? true:false)\n            },\n            player_2:{\n                score:state.player2,\n                won: (state.player2 > state.player1 ? true:false)\n            },\n        }\n    ];\n    return {\n        ...initial,\n        score:newScore,\n    }\n}\n\nconst p1Name = (state,{player1Name}) => ({ ...state, player1Name: player1Name + state.player1Name});\nconst p2Name = (state,{player2Name}) => ({ ...state, player2Name: player2Name + state.player2Name});\nconst winScore = (state,{winningScore})  => ({ ...state, winningScore: winningScore });\nconst altServer = (state,{alternateServer}) => ({ ...state, alternateServer: alternateServer });\n\n// called Function Composition: serving(server(player2(state)))\nexport default (state, action) => {\n    switch (action.type) {\n        case \"INCREMENT_P1\": return serving(server(player1(state)));;;\n        case \"INCREMENT_P2\": return serving(server(player2(state)));;;\n        case \"RESET\": return scoring(state,initial);\n        case \"START_GAME\": return altServer(winScore(p2Name(p1Name(state, action),action),action),action);;;;  \n        default: return state;\n } };\n\n\n\n\n\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.css';\n// import { createStore } from \"redux\";\n\n//for REDUX LOCAL STORAGE\n// import { createStore, compose } from \"redux\";\nimport persistState from \"redux-localstorage\";\n//\n\nimport initial from './initial';\nimport reducer from './reducer'; \n\nimport { createStore, applyMiddleware, compose } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\n//Made changes to store for allowing page refresh without resetting state\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n//changes added to allow Redux-Thunk working for API requests\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(\n    reducer, \n    initial,\n    composeEnhancers(applyMiddleware(thunk))\n    );\n\n // subscribe to any changes\n\n\n \n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport {Provider} from \"react-redux\";\n\nimport App from './components/App';\n\nimport store from './data/store';\n\n\n// for Testing Axios is working\n// import axiosConfig from './axios';\n// axiosConfig.get(\"/\").then(({data})=> {\n//     console.log(data);\n// })\n\n//Now that REACT REDUX is installed lets add {Provider}\n\n\n// store.subscribe(() => {\n//     let state = store.getState();\n//       // for now, just log the new count\n//     console.log(state.player1);\n//     console.log(state.player2);\n//     console.log(state.serving);\n//     console.log(state.switchServer);\n \n// });\n\nlet state = store.getState();\n    // pass in state.value as a value prop\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, \n    document.getElementById(\"root\")\n);\n \n\n\n"],"sourceRoot":""}